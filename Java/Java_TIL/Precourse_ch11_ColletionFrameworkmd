# 컬렉션 프레임워크



## 컬렉션 프레임 워크란?

- 프로그램에 필요한 자료구조와 알고리즘을 구현해 놓은 라이브러리
  - 자료구조와 알고리즘은 데이터들을 어떤 구조로 관리했을 때 가장 효율적인 알고리즘을 적용해서 최적의 퍼포먼스를 보일 것인 것에 대한 내용.
    - 이 부분은 강사님이 애매하게 설명해주셔서 보충이 필요할 것 같다
    - 확실한건 자료구조와 알고리즘이 연관되어 있다는 것 같다
- java.util 패키지에 구현되어 있음 
- 컬렉션 프레임워크를 사용함으로 개발에 소요되는 시간을 절약하고 최적화된 라이브러리를 사용할 수 있다
- 크게 Colletion 인터페이와 Map 인터페이스로 구성되어 있다



## Colletion 인터페이스

- 하나의 객체의 자료구조를 관리를 위해 선언된 인터페이스로 필요한 기본메서드가 선언되어 있다

- 하위에 List인터페이스와 Set인터페이스가 있다
  - 이러한 구조를 알아 두면 나중에 사용할 때 도움이 된다



![콜렉션](C:\Users\foevn\Documents\dev\devlog\Images\콜렉션.PNG)



## Map 인터페이스

- 쌍으로 이루어진 객체를 관리하는데 필요한  여러 메서드가 선언 되어 있다
  - Colletion은 하나, Map은 쌍이니까 두개!
- Map을 사용하는 객체는 Key - Value 쌍으로 되어 있고 Key는 중복될 수 없지만 Value는 중복이 가능하다



 ![map](C:\Users\foevn\Documents\dev\devlog\Images\map.PNG)



### 자료구조에 대한 전반적인 설명

​	본격적으로 컬렉션 프레임 워크에 대해 진도에 이해를 더하기 위해 전반적인 자료구조에 대한 설명

- 배열은 선형 자료구조, 논리적인 구조와 물리적인 자료구조가 동일한 형태
  - 단점 :  중간에 자료가 빠지면 메모리를 앞으로 땡겨오는 작업필요
- Linked List - 논리적으로는 선형으로 되어있지만 물리적인 위치는 동떨어진 형태
  - 장점 : 중간에 자료가 빠져도 링크만 조정해주면됨

